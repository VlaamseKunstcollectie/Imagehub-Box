---

nginx_vhosts:
  - listen: "80"
    server_name: "datahub.iiif.vlaamsekunstcollectie.be"
    root: "/srv/imagehub/datahub/web"
    index: "index.php index.html index.htm"
    access_log: "/var/log/nginx/project_access.log"
    error_log: "/var/log/nginx/project_error.log"
    extra_parameters: |

      location / {
          # try to serve file directly, fallback to app.php
          try_files $uri /app.php$is_args$args;
      }

      # DEV
      # This rule should only be placed on your development environment
      # In production, don't include this and don't deploy app_dev.php or config.php
      location ~ ^/(app_dev|config)\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
      }

      # PROD
      location ~ ^/app\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          # Prevents URIs that include the front controller. This will 404:
          # http://domain.tld/app.php/some-path
          # Remove the internal directive to allow URIs like this
          internal;
      }

      # return 404 for all other php files not matching the front controller
      # this prevents access to other php files you don't want to be accessible.
      location ~ \.php$ {
        return 404;
      }

  - listen: "80"
    server_name: "arthub.iiif.vlaamsekunstcollectie.be"
    root: "/vagrant/project-blacklight"
    index: "index.php index.html index.htm"
    access_log: "/var/log/nginx/blacklight_project_access.log"
    error_log: "/var/log/nginx/blacklight_project_error.log"
    extra_parameters: |
      location / {
        proxy_pass         http://127.0.0.1:3000/;
        proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      }

  - listen: "80"
    server_name: "ingest.vlaamsekunstcollectie.be"
    root: "/srv/imagehub/resourcespace"
    index: "index.php index.html index.htm"
    access_log: "/var/log/nginx/project_access.log"
    error_log: "/var/log/nginx/project_error.log"
    extra_parameters: |
      location ~* \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
      }

  - listen: "80"
    server_name: "imagehub.vlaamsekunstcollectie.be"
    root: "/srv/imagehub/imagehub/web"
    index: "index.php index.html index.htm"
    access_log: "/var/log/nginx/project_access.log"
    error_log: "/var/log/nginx/project_error.log"
    extra_parameters: |
    
      # Enable gzip compression
      gzip on;
      gzip_comp_level 2;
      gzip_http_version 1.0;
      gzip_proxied any;
      gzip_min_length 1100;
      gzip_buffers 16 8k;
      gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      gzip_vary on;

      # By default, all requests go to Imagehub/Symfony
      location = / {
          # try to serve file directly, fallback to app.php
          try_files $uri /app.php$is_args$args;
      }
      
      # Pass all other requests for /iiif/.* to Tomcat
      location ~ ^/iiif/2/[0-9]+.*$ {
        proxy_pass         http://127.0.0.1:8080;
        proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      }

      # DEV This rule should only be placed on your development environment In production, don't include this 
      # and don't deploy app_dev.php or config.php
      location ~ ^/(app_dev|config)\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
      }

      # PROD
      location ~ ^/app\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          # Prevents URIs that include the front controller. This will 404:
          # http://domain.tld/app.php/some-path
          # Remove the internal directive to allow URIs like this
          internal;
      }

      # return 404 for all other php files not matching the front controller
      # this prevents access to other php files you don't want to be accessible.
      location ~ \.php$ {
        return 404;
      }

      # All other requests go to Imagehub/Symfony as well
      location ~ ^/.*$ {
          # try to serve file directly, fallback to app.php
          try_files $uri /app_dev.php$is_args$args;
      }

  - listen: "80"
    server_name: "images.vlaamsekunstcollectie.be"
    root: "/srv/imagehub/imagehub/web"
    index: "index.php index.html index.htm"
    access_log: "/var/log/nginx/project_access.log"
    error_log: "/var/log/nginx/project_error.log"
    extra_parameters: |
      # By default, all requests go to Imagehub/Symfony
      location = / {
          # try to serve file directly, fallback to app.php
          try_files $uri /app.php$is_args$args;
      }

      # Pass all other requests for /iiif/.* to Tomcat
      location ~ ^/iiif/2/[0-9]+.*$ {
        proxy_pass         http://127.0.0.1:8080;
        proxy_redirect     off;

        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      }

      # DEV This rule should only be placed on your development environment In production, don't include this 
      # and don't deploy app_dev.php or config.php
      location ~ ^/(app_dev|config)\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
      }

      # PROD
      location ~ ^/app\.php(/|$) {
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          include fastcgi_params;
          # When you are using symlinks to link the document root to the
          # current version of your application, you should pass the real
          # application path instead of the path to the symlink to PHP
          # FPM.
          # Otherwise, PHP's OPcache may not properly detect changes to
          # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
          # for more information).
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          # Prevents URIs that include the front controller. This will 404:
          # http://domain.tld/app.php/some-path
          # Remove the internal directive to allow URIs like this
          internal;
      }

      # return 404 for all other php files not matching the front controller
      # this prevents access to other php files you don't want to be accessible.
      location ~ \.php$ {
        return 404;
      }

      # All other requests go to Imagehub/Symfony as well
      location ~ ^/.*$ {
          # try to serve file directly, fallback to app.php
          try_files $uri /index.php$is_args$args;
      }
